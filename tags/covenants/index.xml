<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>covenants on ₿itcoin Transcripts</title><link>//btctranscripts.com/tags/covenants/</link><description>Recent content in covenants on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="//btctranscripts.com/tags/covenants/index.xml" rel="self" type="application/rss+xml"/><item><title>Bitcoin Script</title><link>//btctranscripts.com/scalingbitcoin/tokyo-2018/bitcoin-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//btctranscripts.com/scalingbitcoin/tokyo-2018/bitcoin-script/</guid><description>Featuring roasbeef
Agenda opcodes OP_CHECKSIGFROMSTACK sighash flags keytree sigs MAST graftroot, taproot covenants, reverse covenants (input restrictions: this input has to be spent with tihs other input, or can only be spent if this other one doesn&amp;rsquo;t exist) stack manipulation script languages (simplicity) tx formats, serialization? what would we change with hard-fork changes to the transaction format? Segwit transaction encoding format sucks; the witnesses are at the end and inline with all the scriptsigs and that should be changed.</description></item><item><title>Covenants</title><link>//btctranscripts.com/scalingbitcoin/milan-2016/covenants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//btctranscripts.com/scalingbitcoin/milan-2016/covenants/</guid><description>Bitcoin covenants: Opportunities and challenges
Emin Gun Sirer
https://twitter.com/kanzure/status/785071789705728000
https://www.youtube.com/watch?time_continue=10254&amp;amp;v=_Z0ID-0DOnc
We published this last February at an academic workshop. The work itself has interesting ramifications. My real goal here is to start a conversation and then do a follow-up blog post where we collate feedback from the community. We would like to add this to Bitcoin Core. Covenants.
This all started from a very basic and simple observation about the current status of our computing infrastructure.</description></item><item><title>Kevin Loaec Antoine Poinsot Revault (2020-05-26)</title><link>//btctranscripts.com/london-bitcoin-devs/2020-05-26-kevin-loaec-antoine-poinsot-revault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//btctranscripts.com/london-bitcoin-devs/2020-05-26-kevin-loaec-antoine-poinsot-revault/</guid><description>Name: Kevin Loaec and Antoine Poinsot
Topic: Revault - A Multiparty Vault Architecture
Location: London Bitcoin Devs (online)
Date: May 26th 2020
Video: https://www.youtube.com/watch?v=7CE4aiFxh10
Kevin slides: https://www.dropbox.com/s/rj45ebnic2m0q2m/kevin%20loaec%20revault%20slides.pdf?dl=0
Antoine slides: https://www.dropbox.com/s/xaoior0goo37247/Antoine%20Poinsot%20Revault%20slides.odp?dl=0
Intro (Michael Folkson) This is London Bitcoin Devs. This is on Zoom and live-streaming on YouTube. Last week we had a Socratic Seminar on vaults, covenants and CHECKTEMPLATEVERIFY. There is a video up for that. There is also a transcript, @btctranscripts on Twitter.</description></item><item><title>Merkleized Abstract Syntax Trees - MAST (2018-03-06)</title><link>//btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</guid><description>https://twitter.com/kanzure/status/972120890279432192
See also http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/
MAST stuff You could directly merkleize scripts if you switch from IF, IFNOT, ELSE with IFJUMP that has the number of bytes.
With graftroot and taproot, you never to do any scripts (which were a hack to get things started). But we&amp;rsquo;re doing validation and computation.
You take every single path it has; so instead, it becomes &amp;hellip; certain condition, or certain not conditions&amp;hellip; You take every possible ifs, you use this, you say it&amp;rsquo;s one of these, then you specify which one, and you show it and everyone else can validate this.</description></item><item><title>Plasma Cash</title><link>//btctranscripts.com/scalingbitcoin/tel-aviv-2019/plasma-cash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//btctranscripts.com/scalingbitcoin/tel-aviv-2019/plasma-cash/</guid><description>Plasma Cash: Towards more efficient plasma constructions
Non-custodial sidechains for bitcoin utilizing plasma cash and covenants
Georgios Konstantopoulos
https://twitter.com/kanzure/status/1172108023705284609
paper: https://github.com/loomnetwork/plasma-paper/blob/master/plasma_cash.pdf
slides: https://gakonst.com/scalingbitcoin2019.pdf
Introduction We have known how to do these things for at least a year, but the question is how can we find the minimum changes that we can figure out to do in bitcoin if any on how to explore the layer 2 space in a better sense rather than just accepting that lightning network is the dominant solution?</description></item></channel></rss>